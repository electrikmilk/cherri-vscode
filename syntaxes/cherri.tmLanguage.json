{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Cherri",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#pragmas"
		},
		{
			"include": "#declerations"
		},
		{
			"include": "#blockcomments"
		},
		{
			"include": "#linecomments"
		},
		{
			"include": "#contants"
		},
		{
			"include": "#actions"
		},
		{
			"include": "#calls"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#types"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.cherri",
				"match": "\\b(if|else|repeat|for|color|name|glyph|from|mac|inputs|from|noinput|askfor|getclipboard|menu|item|list|nil|const|action|in|stop|makeVCard|rawAction)\\b"
			}]
		},
		"pragmas": {
			"patterns": [{
				"name": "keyword.pragma.cherri",
				"match": "(#include|#define|#import|#question)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.cherri",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.cherri",
					"match": "\\\\."
				},
				{
					"name": "string.interpolated.cherri",
					"match": "\\{.*?\\}"
				}
			]
		},
		"declerations": {
			"name": "variable.other.cherri",
			"patterns": [{
				"name": "storage.type.cherri",
				"match": "@[^ ]+\\b"
			}]
		},
		"blockcomments": {
			"name": "comment.block.cherri",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": [
				{
					"name": "comment.line.double-slash.cherri",
					"match": "//.*$"
				}
			]
		},
		"linecomments": {
			"name": "comment.line.double-slash.cherri",
			"match": "//.*$"
		},
		"constants": {
			"name": "constants.cherri",
			"patterns": [
				{
					"name": "constant.language.cherri",
					"match": "\\b(CurrentDate|Device|RepeatIndex|RepeatItem|ShortcutInput|Ask)\\b"
				},
				{
					"name": "constants.digits.cherri",
					"match": "\\b[0-9]+\\b"
				}
			]
		},
		"actions": {
			"name": "storage.type.cherri",
			"match": "\\b(action)\\b"
		},
		"calls": {
			"name": "entity.name.function.cherri",
			"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b\\("
		},
		"variables": {
			"name": "variable.other.cherri",
			"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
		},
		"types": {
			"patterns": [{
				"name": "entity.name.type.cherri",
				"match": "(text|number|bool|dictionary|array|var|float)\\b"
			}]
		}
	},
	"scopeName": "source.cherri"
}
